/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => JiraLinkerPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var DEFAULT_SETTINGS = {
  jira_instance_url: ""
};
var JiraLinkerPlugin = class extends import_obsidian.Plugin {
  async onload() {
    await this.loadSettings();
    this.addCommand({
      id: "cmd-link-jira-issue",
      name: "Link Jira issue",
      editorCallback: (editor, view) => {
        const jira_url = this.settings.jira_instance_url;
        const content = editor.getSelection();
        if (jira_url == "") {
          const msg = "The JIRA URL has not been set in settings";
          new import_obsidian.Notice(msg);
          return;
        }
        if (content == "") {
          new JiraIssueInputModal(this.app, (result) => {
            if (result !== "") {
              editor.replaceSelection(`[${result}](${jira_url}/browse/${result})`);
            }
          }).open();
        } else {
          editor.replaceSelection(`[${content}](${jira_url}/browse/${content})`);
        }
      }
    });
    this.addSettingTab(new JiraLinkerSettingTab(this.app, this));
  }
  onunload() {
  }
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }
  async saveSettings() {
    await this.saveData(this.settings);
  }
};
var JiraIssueInputModal = class extends import_obsidian.Modal {
  constructor(app, onSubmit) {
    super(app);
    this.onSubmit = onSubmit;
  }
  onOpen() {
    const { contentEl } = this;
    contentEl.createEl("h1", { text: "Enter your Jira issue" });
    contentEl.createEl("p", { text: "Enter an issue number which will then be appended to your Jira instance url" });
    new import_obsidian.Setting(contentEl).setName("Jira Issue").addText((text) => text.onChange((value) => {
      this.result = value;
    }));
    new import_obsidian.Setting(contentEl).addButton((btn) => btn.setButtonText("Link Issue").setCta().onClick(() => {
      this.close();
      this.onSubmit(this.result);
    }));
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};
var JiraLinkerSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    new import_obsidian.Setting(containerEl).setName("Jira Instance URL").setDesc("The domain URL for your JIRA instance").addText((text) => text.setPlaceholder("JIRA URL").setValue(this.plugin.settings.jira_instance_url).onChange(async (value) => {
      if (value.endsWith("/")) {
        value = value.slice(0, -1);
      }
      this.plugin.settings.jira_instance_url = value;
      await this.plugin.saveSettings();
    }));
  }
};
